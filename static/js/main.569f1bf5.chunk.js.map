{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleChange","event","setState","target","name","value","clearForm","onSubmit","preventDefault","props","addMovie","type","placeholder","this","onChange","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"6xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCtBGK,G,MAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IANZ,EASEG,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAXxC,EAeEC,UAAY,kBAAM,EAAKJ,SAAS,CAC9BnB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MApBZ,4CAuBE,WAAU,IAAD,OACP,OACE,0BACEU,SACE,SAACN,GACCA,EAAMO,iBACN,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKO,cAIT,gDACA,2BACEK,KAAK,OACLP,KAAK,QACLQ,YAAY,QACZP,MAAOQ,KAAKd,MAAMhB,MAClB+B,SAAUD,KAAKb,eAEjB,2BACEW,KAAK,OACLP,KAAK,SACLQ,YAAY,SACZP,MAAOQ,KAAKd,MAAMF,OAClBiB,SAAUD,KAAKb,eAEjB,2BACEW,KAAK,OACLP,KAAK,SACLQ,YAAY,SACZP,MAAOQ,KAAKd,MAAMd,OAClB6B,SAAUD,KAAKb,eAEjB,2BACEW,KAAK,OACLP,KAAK,UACLQ,YAAY,UACZP,MAAOQ,KAAKd,MAAMb,QAClB4B,SAAUD,KAAKb,eAEjB,8BACEW,KAAK,OACLP,KAAK,cACLQ,YAAY,cACZP,MAAOQ,KAAKd,MAAMf,YAClB8B,SAAUD,KAAKb,eAEjB,4BACEW,KAAK,UADP,kBAtER,GAA8BI,c,OCEjBC,EAAb,4MACEjB,MAAQ,CACNN,OAAQwB,GAFZ,EAKEP,SAAW,SAAAf,GAAK,OAAI,EAAKO,UAAS,SAAAgB,GAAS,MAAK,CAC9CzB,OAAO,GAAD,mBAAMyB,EAAUzB,QAAhB,CAAwBE,SANlC,4CASE,WACE,IAAQF,EAAWoB,KAAKd,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CACEuB,SAAUG,KAAKH,iBAnB3B,GAAyBK,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.569f1bf5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  clearForm = () => this.setState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  render() {\n    return (\n      <form\n        onSubmit={\n          (event) => {\n            event.preventDefault();\n            this.props.addMovie(this.state);\n            this.clearForm();\n          }\n        }\n      >\n        <p>Put the form here</p>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={this.state.title}\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"imdbId\"\n          value={this.state.imdbId}\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"imgUrl\"\n          value={this.state.imgUrl}\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"imdbUrl\"\n          value={this.state.imdbUrl}\n          onChange={this.handleChange}\n        />\n        <textarea\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={this.state.description}\n          onChange={this.handleChange}\n        />\n        <button\n          type=\"submit\"\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = movie => this.setState(prevState => ({\n    movies: [...prevState.movies, movie],\n  }));\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}